using System;

namespace Optispeech.Documentation {

    /// <summary>
    /// This attribute is used to hide a certain member or method from appearing in the documentation
    /// generated by docfx. Intended use is for private methods that don't need documentation. 
    /// Since our scripting API is targeted at developers who are going to be working on the source
    /// itself, as opposed to writing a script that just interfaces with this program, it made sense
    /// to allow docfx to generate documentation for private members (especially if they're decorated
    /// with the SerializeFieldAttribute!) However, many private methods like the ones called by
    /// messages from UnityEngine itself (Start, Update, ...) have a very straightforward purpose
    /// that doesn't really change much object to object. 
    /// Instead of adding a comment to every Start method about how its called by UnityEngine at the start
    /// of the game or when the object is added to the scene, and how its being used to setup anything
    /// that needs setting up, it makes sense to assume if they're working on a Unity project like this
    /// they already know that and don't need a reminder on every MonoBehaviour.
    /// Additionally, if the documentation were to describe exactly what is being set up, the documentation
    /// would just be a redundancy of reading the actual code itself, and would likely not be maintained.
    /// Individual Start methods can still remain documented by just not decorating it with this attribute,
    /// if there are special circumstances that make it worth documenting something about that specific
    /// Start method. This should be used sparingly. 
    /// </summary>
    [AttributeUsage(AttributeTargets.All, Inherited = false, AllowMultiple = true)]
    public class HideInDocumentation : Attribute {

        [HideInDocumentation]
        public HideInDocumentation() {

        }
    }
}
